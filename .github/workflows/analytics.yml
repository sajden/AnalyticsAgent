name: YouTube Analytics Daily

on:
  schedule:
    - cron: '30 6 * * *'
  workflow_dispatch:

jobs:
  fetch-and-save:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: yt-analytics-only
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: yt-analytics-only/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Fetch YouTube analytics
        run: npm run yt:analytics
        env:
          YT_CLIENT_ID: ${{ secrets.YT_CLIENT_ID }}
          YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
          YT_REFRESH_TOKEN: ${{ secrets.YT_REFRESH_TOKEN }}

      - name: Capture latest analytics file
        id: latest_file
        run: |
          file=$(ls -1t data/analytics/*-youtube-analytics.json | head -n 1)
          if [ -z "$file" ]; then
            echo "No analytics file generated." >&2
            exit 1
          fi
          file=$(realpath "$file")
          echo "path=$file" >> "$GITHUB_OUTPUT"

      - name: Upload analytics file to OpenAI
        id: upload_file
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANALYTICS_FILE: ${{ steps.latest_file.outputs.path }}
        run: |
          response=$(curl -sS -X POST https://api.openai.com/v1/files \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -F "purpose=assistants" \
            -F "file=@${ANALYTICS_FILE}")
          file_id=$(echo "$response" | jq -r '.id')
          if [ -z "$file_id" ] || [ "$file_id" = "null" ]; then
            echo "File upload failed: $response" >&2
            exit 1
          fi
          echo "file_id=$file_id" >> "$GITHUB_OUTPUT"

      - name: Attach file to Vector Store
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          VS_ID: ${{ secrets.VS_ID }}
          FILE_ID: ${{ steps.upload_file.outputs.file_id }}
        run: |
          response=$(curl -sS -X POST "https://api.openai.com/v1/vector_stores/${VS_ID}/files" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"file_id\":\"${FILE_ID}\"}")
          attached_id=$(echo "$response" | jq -r '.id')
          if [ -z "$attached_id" ] || [ "$attached_id" = "null" ]; then
            echo "Vector store attachment failed: $response" >&2
            exit 1
          fi
